import 'dart:async';

/// –í–æ–∑–º–æ–∂–Ω—ã–µ —ç—Ç–∞–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏
enum DeliveryStatus {
  ordered('In Bearbeitung'),
  packed('Wird f√ºr den Versand vorbereitet'),
  shipped('Paket wurde dem Zusteller √ºbergeben'),
  outForDelivery('In Zustellung'),
  delivered('Zugestellt');

  final String description;

  const DeliveryStatus(this.description);

  @override
  String toString() => description;
}

/// –§—É–Ω–∫—Ü–∏—è-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: ¬´—à–ª—ë—Ç¬ª —Å—Ç–∞—Ç—É—Å —Ä–∞–∑ –≤ 2 —Å.
Stream<DeliveryStatus> fakeDeliveryStream() async* {
  for (final status in DeliveryStatus.values) {
    await Future.delayed(const Duration(seconds: 2));
    yield status; // notifyObservers()
  }
}

Future<void> main() async {
  final completer = Completer<void>();
  // Observer –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
  fakeDeliveryStream().listen(
    (status) => print('üì¶ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: $status'),
    onDone: () {
      print('üéâ Lieferung abgeschlossen');
      completer.complete();
    },
  );

  // –∂–¥—ë–º –∫–æ–Ω—Ü–∞ –ø–æ—Ç–æ–∫–∞, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏
  await completer.future;
}
